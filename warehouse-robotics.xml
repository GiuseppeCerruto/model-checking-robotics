<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int N = 10;
const int M = 10;
const int P = 20;
const int MAX_T=10;

typedef struct {
bool isPodOn;
bool isRobotOn;
bool isEntry;
bool isDelivery;
bool will_be_occupied;
} Square;

Square matrix[N][M]; 


typedef struct {
int x;
int y;
bool assigned;
} Pod;

Pod pods[P];

typedef struct{
Pod pod;
} Task;


chan pick, release, claim;</declaration>
	<template>
		<name>TaskDispatcher</name>
		<parameter>int T</parameter>
		<declaration>clock x;

int head=0;
int tail=0;
int queue_length=0;

Task tasks[MAX_T];

Task create_task(){
    double rand;
    int i;
    bool flag=false;
    Task t;
    do{
        rand=random(0-(P-1));
        i= fint(rand); 
        if(pods[i].assigned==false){
            flag=true;
            pods[i].assigned=true;
        }
    }while(!flag);
    t.pod=pods[i];
    return t;
}

void enqueue(){
    queue_length++;
    tasks[tail]=create_task();
    tail=(tail+1)%MAX_T;
}

void dequeue(){
    queue_length--;
    head=(head+1)%MAX_T;
}</declaration>
		<location id="id0" x="-1521" y="-331">
			<label kind="invariant" x="-1538" y="-306">x&lt;=T</label>
		</location>
		<location id="id1" x="-1198" y="-306">
			<name x="-1208" y="-340">Overflow</name>
			<urgent/>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="assignment" x="-1300" y="-221">x=0</label>
			<nail x="-1284" y="-229"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-1462" y="-348">x&gt;=T &amp;&amp; queue_length==MAX_T</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-1487" y="-408">x&gt;=T &amp;&amp; queue_length&lt;MAX_T</label>
			<label kind="assignment" x="-1453" y="-391">enqueue(), x=0</label>
			<nail x="-1504" y="-382"/>
			<nail x="-1453" y="-382"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-1597" y="-365">claim?</label>
			<label kind="assignment" x="-1614" y="-382">dequeue()</label>
			<nail x="-1606" y="-340"/>
			<nail x="-1580" y="-280"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Robot</name>
		<declaration>// Place local declarations here.

</declaration>
		<location id="id2" x="-1351" y="-467">
			<name x="-1361" y="-501">initial</name>
		</location>
		<init ref="id2"/>
	</template>
	<template>
		<name>Human</name>
		<parameter>int H</parameter>
		<declaration>clock x;
</declaration>
		<location id="id3" x="-450" y="-204">
			<name x="-460" y="-238">idle</name>
		</location>
		<location id="id4" x="-289" y="-85">
			<name x="-297" y="-68">picking</name>
			<label kind="invariant" x="-263" y="-93">x&lt;=H</label>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-307" y="-174">x&gt;=H</label>
			<label kind="synchronisation" x="-314" y="-195">release!</label>
			<nail x="-316" y="-174"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-433" y="-68">pick?</label>
			<label kind="assignment" x="-433" y="-85">x=0</label>
			<nail x="-399" y="-93"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
r = Robot();
h = Human(10);
t = TaskDispatcher(10);
// List one or more processes to be composed into a system.
system r, h, t;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
